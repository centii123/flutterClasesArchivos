//sirve para cosas que no cambian como algun componente starico que siempre va a ser el mismo
class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key); //esto es obligatorio


  @override
  Widget build(BuildContext context) {
    const String mensaje = "hola sebas";//aqui siempre se ponen las variables no afuera
    final animales = ['leon', 'mama'];
    
    return MaterialApp(
      title: animales[1],
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: mensaje),
    );
  }
}

//sirve para cosas que cambian como algun componente esta cambiando sea este peque√±o
class MyHomePage extends StatefulWidget {
  final String title;
  const MyHomePage({super.key, required this.title});

  

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 20;

  void _incrementCounter() {
    setState(() {
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ),
    );
  }
}